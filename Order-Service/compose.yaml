version: '3.8'

services:
  # PostgreSQL Shard 0 (Primary)
  postgres-shard0:
    image: postgres:15
    container_name: order-service-shard0
    environment:
      POSTGRES_DB: Order-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yahyasd56
    ports:
      - "5432:5432"
    volumes:
      - postgres_shard0_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - order-network

  # PostgreSQL Shard 1
  postgres-shard1:
    image: postgres:15
    container_name: order-service-shard1
    environment:
      POSTGRES_DB: Order-service-shard-1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yahyasd56
    ports:
      - "5433:5432"
    volumes:
      - postgres_shard1_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - order-network

  # PostgreSQL Shard 2
  postgres-shard2:
    image: postgres:15
    container_name: order-service-shard2
    environment:
      POSTGRES_DB: Order-service-shard-2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yahyasd56
    ports:
      - "5434:5432"
    volumes:
      - postgres_shard2_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - order-network

  # PostgreSQL Shard 3
  postgres-shard3:
    image: postgres:15
    container_name: order-service-shard3
    environment:
      POSTGRES_DB: Order-service-shard-3
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yahyasd56
    ports:
      - "5435:5432"
    volumes:
      - postgres_shard3_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - order-network

  # Apache Kafka for event streaming
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: order-service-kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - order-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: order-service-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - order-network

  # Zipkin for distributed tracing
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: order-service-zipkin
    ports:
      - "9411:9411"
    networks:
      - order-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: order-service-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - order-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: order-service-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - order-network

volumes:
  postgres_shard0_data:
  postgres_shard1_data:
  postgres_shard2_data:
  postgres_shard3_data:
  grafana_data:

networks:
  order-network:
    driver: bridge
