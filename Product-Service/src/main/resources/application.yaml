spring:
  config:
    import: configserver:http://localhost:8888
  application:
    name: product-service
  datasource:
    url: jdbc:postgresql://localhost:5432/Product-service
    username: postgres
    password: yahyasd56
    #    password: zakaria
    driver-class-name: org.postgresql.Driver
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 2KB
      enabled: true
    codec:
      max-in-memory-size: 10MB
  jpa:
    hibernate:
      ddl-auto: update  # Change to 'none' or 'validate' based on your use case
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate.format_sql: true
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        spring.json.type.mapping: >-
          productCreatedEvent:com.Ecommerce.Product_Service.events.ProductEvents$ProductCreatedEvent,
          productUpdatedEvent:com.Ecommerce.Product_Service.events.ProductEvents$ProductUpdatedEvent,
          productDeletedEvent:com.Ecommerce.Product_Service.events.ProductEvents$ProductDeletedEvent,
          productStockChangedEvent:com.Ecommerce.Product_Service.events.ProductEvents$ProductStockChangedEvent,
          productPriceChangedEvent:com.Ecommerce.Product_Service.events.ProductEvents$ProductPriceChangedEvent,
          productStatusChangedEvent:com.Ecommerce.Product_Service.events.ProductEvents$ProductStatusChangedEvent
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
    admin:
      auto-create: true



server:
  port: 8082
  servlet:
    context-path: /api/products
  tomcat:
    max-swallow-size: 10MB
    max-http-form-post-size: 10MB
  max-http-request-header-size: 20KB
file:
  upload-dir: ./uploads/images
  max-size: 10485760  # 10MB in bytes
  allowed-extensions: jpg,jpeg,png,gif,bmp,webp
  allowed-mime-types: image/jpeg,image/png,image/gif,image/bmp,image/webp

springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    doc-expansion: none
  group-configs:
    - group: product-service
      paths-to-match:
        - /**
# ELK configuration - include in all services
logstash:
  host: ${LOGSTASH_HOST:localhost}
  port: ${LOGSTASH_PORT:5000}
eureka:
  instance:
    preferIpAddress: true
    instanceId: ${spring.application.name}:${server.port}
    hostname: localhost
    metadataMap:
      instanceId: ${spring.application.name}:${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    env:
      show-values: ALWAYS