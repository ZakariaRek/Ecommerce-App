spring:
  application:
    name: cart-service
  data:
    mongodb:
      database: Cart-service  # Ensure this is your intended database name
      host: localhost         # Ensure MongoDB is running on this host
      port: 27017             # Ensure MongoDB is listening on this port
    redis:
      host: localhost
      port: 6379
      timeout: 2000
      # Add these if using authentication
      # password: your_password
    cache:
      type: redis
      redis:
        time-to-live: 600000  # Default cache TTL in milliseconds (10 minutes)
        cache-null-values: false
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

#springdoc:
#  api-docs:
#    path: /api-docs
#    enabled: true
#  swagger-ui:
#    path: /swagger-ui.html
#    enabled: true
#    operations-sorter: method
#    tags-sorter: alpha
#    doc-expansion: none
#  group-configs:
#    - group: cart-service
#      paths-to-match:
#        - /**
# OpenAPI/Swagger Configuration


# OpenAPI Configuration

# OpenAPI/Swagger Configuration
#springdoc:
#  api-docs:
#    enabled: true
#    path: /api-docs
#    version: 3.0  # Explicitly set the OpenAPI version
#  swagger-ui:
#    enabled: true
#    path: /swagger-ui.html
#    displayRequestDuration: true
#    defaultModelsExpandDepth: 1
#    defaultModelExpandDepth: 1
#  packages-to-scan: com.Ecommerce.Cart.Service.Controllers

server:
  port: 8087

redis:
#  timeout: 2000
  maximumActiveConnectionCount: 128


#kafka:
#  bootstrap-servers: localhost:9092
#  producer:
#    key-serializer: org.apache.kafka.common.serialization.StringSerializer
#    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#  consumer:
#    group-id: cart-service-group
#    auto-offset-reset: earliest
#    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#    properties:
#      spring.json.trusted.packages: com.Ecommerce.Cart.Service
#
#
#app:
#  kafka:
#    topics:
#      cart-events: cart-events
#      product-price-updates: product-price-updates
