spring:
  config:
    import: optional:configserver:http://localhost:8888
  application:
    name: cart-service
  data:
    mongodb:
      database: Cart-service
      host: localhost
      port: 27017
    redis:
      host: localhost
      port: 6379
      timeout: 2000
    cache:
      type: redis
      redis:
        time-to-live: 600000
        cache-null-values: false

  # ✅ FIXED Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # ✅ CRITICAL: Disable type headers to avoid classpath issues
        spring.json.add.type.headers: false
        # Additional producer settings for reliability
        acks: all
        retries: 3
        enable.idempotence: true
    consumer:
      group-id: cart-service-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        # ✅ Configure nested deserializers for ErrorHandlingDeserializer
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        # ✅ CRITICAL: JsonDeserializer settings for ErrorHandlingDeserializer
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: java.lang.Object

server:
  port: 8087
  error:
    include-stacktrace: always
    include-message: always
    include-binding-errors: always
  servlet:
    context-path: /api/carts
debug: true
eureka:
  instance:
    preferIpAddress: true
    instanceId: ${spring.application.name}:${server.port}
    hostname: localhost
    metadataMap:
      instanceId: ${spring.application.name}:${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

# Redis configuration
redis:
  maximumActiveConnectionCount: 128

# Logging configuration for debugging
#logging:
#  level:
#    root: INFO
#    org.springframework.web: DEBUG
#    org.springframework.security: DEBUG
#    org.springframework.boot.autoconfigure: DEBUG
#    com.Ecommerce: DEBUG  # Your package
#    org.springframework.kafka: DEBUG
#    org.apache.kafka: WARN
#    com.Ecommerce.Cart.Service.Lisiteners: DEBUG
#    com.Ecommerce.Cart.Service.Config.KafkaProducerConfig: DEBUG
#  pattern:
#    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,kafka
  endpoint:
    health:
      show-details: always