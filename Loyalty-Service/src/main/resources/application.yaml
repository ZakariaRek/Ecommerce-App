# src/main/resources/application.yml
server:
  port: 8084
  servlet:
    context-path: /api/loyalty

#
#springdoc:
#  api-docs:
#    path: /api-docs
#  swagger-ui:
#    path: /swagger-ui.html
#    operations-sorter: method
#    tags-sorter: alpha
#    doc-expansion: none
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
spring:
  # Database configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/loyalty-service
    username: postgres
    password: yahyasd56
    driver-class-name: org.postgresql.Driver
  
  # JPA / Hibernate configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    open-in-view: false
  
  # Jackson configuration for date/time serialization
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
  application:
    name: loyalty-service
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

## Logging configuration
#logging:
#  level:
#    com.loyalty: DEBUG
#    org.springframework: INFO
#    org.hibernate: INFO
#    org.hibernate.SQL: DEBUG
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Application-specific configuration
loyalty:
  points:
    # Points expiration in days (0 = never expire)
    expiration-days: 365
    # Minimum points for redemption
    min-redemption: 100
  membership:
    tiers:
      bronze:
        min-points: 0
        benefits: "Basic customer support"
      silver:
        min-points: 500
        benefits: "Priority customer support, Birthday reward"
      gold:
        min-points: 2000
        benefits: "VIP customer support, Birthday reward, Quarterly bonus"
      platinum:
        min-points: 5000
        benefits: "Dedicated account manager, Enhanced rewards, Special events"
      diamond:
        min-points: 10000
        benefits: "All benefits plus exclusive access and personalized offers"

Point Earning Events:
  - Order Completion: 1 point per $1 spent
  - First Order Bonus: +100 points
  - Credit Card Payment: +10 points
  - Product Review: +10 points (verified purchases only)
  - User Referral: +100 points (referrer)
  - Welcome Bonus: +50 points (new user)
  - Birthday: Tier-based bonus points

eureka:
  instance:
    preferIpAddress: true
    instanceId: ${spring.application.name}:${server.port}
    hostname: localhost
    metadataMap:
      instanceId: ${spring.application.name}:${server.port}

# Logging Configuration
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web: DEBUG
    com.Ecommerce.Gateway_Service: DEBUG
    org.springframework.data.redis: DEBUG
    org.springframework.web.cors: DEBUG
    io.github.resilience4j: DEBUG
    org.springframework.boot.autoconfigure: DEBUG
    com.Ecommerce: DEBUG  # Your package
    org.springframework.kafka: DEBUG
    org.apache.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
